id: moe.celica.BabyloniaTerminal
runtime: org.gnome.Platform
runtime-version: "47"
sdk: org.gnome.Sdk
sdk-extensions:
  - org.freedesktop.Sdk.Extension.rust-stable
command: babylonia_terminal_launcher
separate-locales: false
finish-args:
  - --share=network
  - --share=ipc
  - --device=all
  - --socket=x11
  - --socket=wayland
  - --socket=pulseaudio
  - --filesystem=host
  - --env=LD_LIBRARY_PATH=/app/lib
  #- --env=PATH=$PATH:/usr/lib/extensions/vulkan/gamescope/bin
  - --allow=devel
  
modules:
  - name: babylonia-terminal
    buildsystem: simple
    build-options:
      #append-path: /usr/lib/sdk/rust-stable/bin
      env:
        CARGO_HOME: ./cargo
    build-commands:
      - /usr/lib/sdk/rust-stable/bin/cargo --offline fetch --manifest-path Cargo.toml --verbose
      - /usr/lib/sdk/rust-stable/bin/cargo --offline build --release --verbose

      - cp /run/build/babylonia-terminal/target/release/babylonia-terminal /app/bin/babylonia-terminal
    sources:
      - type: git
        url: https://github.com/ALEZ-DEV/Babylonia-terminal
      - cargo-sources.json

  - name: metadata
    buildsystem: simple
    only-arches:
      - x86_64
    build-commands:
      - set -e
      - set -x
      - mkdir -p /app/share/metainfo
      - cp -r moe.celica.BabyloniaTerminal.metainfo.xml /app/share/metainfo/
      - mkdir -p /app/share/icons/hicolor/512x512/apps
      - cp -r moe.celica.BabyloniaTerminal.png /app/share/icons/hicolor/512x512/apps/
      - mkdir -p /app/share/applications
      - cp -r moe.celica.BabyloniaTerminal.desktop /app/share/applications/
    sources:
      - type: dir 
        path: .

  - name: winetricks
    buildsystem: simple
    build-commands:
      - cp -r winetricks /app/bin/
    sources:
    - type: file
      url: https://raw.githubusercontent.com/Winetricks/winetricks/master/src/winetricks
      sha256: bcc23ee960413bc74ef6599ba8e35f9d0531e7256bbeb599a61ea40f5be71c39

  - name: cabextract # needed to install the fonts
    buildsystem: simple
    build-commands:
      - ./configure --prefix=/app
      - make
      - make install
    sources:
    - type: archive
      url: https://www.cabextract.org.uk/cabextract-1.11.tar.gz
      sha256: b5546db1155e4c718ff3d4b278573604f30dd64c3c5bfd4657cd089b823a3ac6

  - name: libass
    cleanup:
    - /include
    - /lib/*.la
    - /lib/pkgconfig
    config-opts:
    - --disable-static
    sources:
    - type: archive
      url: https://github.com/libass/libass/releases/download/0.17.1/libass-0.17.1.tar.xz
      sha256: f0da0bbfba476c16ae3e1cfd862256d30915911f7abaa1b16ce62ee653192784
    modules:
    - name: fribidi
      cleanup:
      - /bin
      - /include
      - /lib/pkgconfig
      - /lib/*.la
      - /share/man
      buildsystem: meson
      config-opts:
      - --buildtype=release
      - -Ddocs=false
      sources:
      - type: git
        url: https://github.com/fribidi/fribidi.git
        tag: v1.0.13
        commit: b54871c339dabb7434718da3fed2fa63320997e5

  - name: x264
    cleanup:
    - /include
    - /lib/pkgconfig
    - /share/man
    config-opts:
    - --disable-cli
    - --enable-shared
    sources:
    - type: git
      url: https://code.videolan.org/videolan/x264.git
      commit: a8b68ebfaa68621b5ac8907610d3335971839d52
      x-checker-data:
        type: json
        url: https://code.videolan.org/api/v4/projects/536/repository/commits
        commit-query: first( .[].id )
        version-query: first( .[].id )
        timestamp-query: first( .[].committed_date )

  - name: nv-codec-headers
    cleanup:
    - '*'
    no-autogen: true
    make-install-args:
    - PREFIX=/app
    sources:
    - type: git
      url: https://github.com/FFmpeg/nv-codec-headers.git
      commit: 855f8263d97bbdcaeabaaaa2997e1ccad7c52dc3

  - name: ffmpeg
    cleanup:
    - /include
    - /lib/pkgconfig
    - /share/ffmpeg/examples
    config-opts:
    - --enable-shared
    - --disable-static
    - --enable-gnutls
    - --disable-doc
    - --disable-programs
    - --disable-encoders
    - --disable-muxers
    - --enable-encoder=png
    - --enable-libv4l2
    - --enable-libdav1d
    sources:
    - type: git
      url: https://git.ffmpeg.org/ffmpeg.git
      branch: release/6.0 

  - name: libmpv
    cleanup:
    - /include
    - /lib/pkgconfig
    - /share/man
    buildsystem: simple
    build-commands:
    - python3 waf configure --prefix=/app --enable-libmpv-shared --disable-cplayer --disable-build-date
      --disable-alsa
    - python3 waf build
    - python3 waf install
    - cp /app/lib/libmpv.so /app/lib/libmpv.so.1
    sources:
    - type: git
      url: https://github.com/mpv-player/mpv.git
      tag: v0.35.1
    - type: file
      url: https://waf.io/waf-2.0.25
      sha256: 21199cd220ccf60434133e1fd2ab8c8e5217c3799199c82722543970dc8e38d5
      dest-filename: waf
